---
interface NoteItem {
  title: string;
  slug: string;
  date?: string;
  excerpt?: string;
}

interface SectionItem {
  name: string;
  description?: string;
  notes: NoteItem[];
}

const { sections = [] } = Astro.props as { sections: SectionItem[] };
---
<div class="grid gap-6 md:grid-cols-2">
  {sections.map((section) => (
    <section class="surface-card" key={section.name}>
      <h2 class="text-lg font-semibold text-neutral-900 dark:text-neutral-100">
        {section.name || 'Loose Notes'}
      </h2>
      {section.description && (
        <p class="mt-1 text-sm text-neutral-600 dark:text-neutral-300">{section.description}</p>
      )}
      <ul class="mt-4 space-y-3">
        {section.notes.map((note) => (
          <li key={note.slug}>
            <a
              href={`/garden/${note.slug}/`}
              class="group flex flex-col rounded-2xl border border-transparent bg-white/40 p-4 transition hover:border-aurora-200 hover:bg-white/80 dark:bg-neutral-900/40 dark:hover:border-aurora-400/40"
            >
              <span class="text-base font-medium text-neutral-900 transition group-hover:text-aurora-600 dark:text-neutral-100">
                {note.title}
              </span>
              {note.excerpt && (
                <span class="mt-1 line-clamp-2 text-sm text-neutral-600 dark:text-neutral-300">
                  {note.excerpt}
                </span>
              )}
              {note.date && (
                <span class="mt-2 text-xs uppercase tracking-wide text-neutral-400">{note.date}</span>
              )}
            </a>
          </li>
        ))}
      </ul>
    </section>
  ))}
</div>
