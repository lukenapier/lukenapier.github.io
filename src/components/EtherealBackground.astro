---
---
<style>
  .flow-field {
    position: absolute;
    inset: -30%;
    background:
      radial-gradient(60% 60% at 50% 35%, rgba(111, 141, 255, 0.32), transparent),
      radial-gradient(50% 50% at 20% 70%, rgba(180, 255, 220, 0.28), transparent),
      radial-gradient(45% 45% at 80% 30%, rgba(255, 200, 255, 0.24), transparent);
    filter: blur(48px);
    transform: translate3d(0, 0, 0);
    animation: drift 18s ease-in-out infinite alternate;
    pointer-events: none;
  }

  .particle-layer {
    position: absolute;
    inset: 0;
    overflow: hidden;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    width: var(--size);
    height: var(--size);
    border-radius: 999px;
    background: radial-gradient(circle at top, rgba(255, 255, 255, 0.45), transparent 70%);
    animation: float var(--duration) ease-in-out infinite;
  }

  @keyframes drift {
    from {
      transform: translate3d(-2%, -1%, 0) scale(1.03);
    }
    to {
      transform: translate3d(2%, 1%, 0) scale(1.08);
    }
  }

  @keyframes float {
    0% {
      transform: translate3d(var(--x-start), var(--y-start), 0) scale(1);
      opacity: 0;
    }
    15% {
      opacity: 0.4;
    }
    85% {
      opacity: 0.4;
    }
    100% {
      transform: translate3d(var(--x-end), var(--y-end), 0) scale(1.1);
      opacity: 0;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .flow-field {
      animation: none;
    }
    .particle {
      animation: none;
      opacity: 0.15;
      transform: translate3d(0, 0, 0);
    }
  }
</style>
<div aria-hidden="true" class="pointer-events-none absolute inset-0">
  <div class="flow-field"></div>
  <div class="particle-layer">
    {Array.from({ length: 24 }).map((_, index) => {
      const size = 160 + Math.random() * 140;
      const xStart = `${(Math.random() * 120 - 10).toFixed(2)}%`;
      const yStart = `${(Math.random() * 120 - 10).toFixed(2)}%`;
      const xEnd = `${(Math.random() * 120 - 10).toFixed(2)}%`;
      const yEnd = `${(Math.random() * 120 - 10).toFixed(2)}%`;
      const duration = `${12 + Math.random() * 12}s`;
      return (
        <div
          class="particle"
          style={{
            '--size': `${size}px`,
            '--x-start': xStart,
            '--y-start': yStart,
            '--x-end': xEnd,
            '--y-end': yEnd,
            '--duration': duration,
            animationDelay: `${index * -0.8}s`,
            opacity: 0.22,
          }}
        />
      );
    })}
  </div>
</div>
